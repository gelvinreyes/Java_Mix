import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'findDay' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER month
     *  2. INTEGER day
     *  3. INTEGER year
     */
     

    public static String findDay(int month, int day, int year) {
        String returnDay="";
        try{
        Calendar cal = Calendar.getInstance();
        String sDate1=String.valueOf(month)+'/'+String.valueOf(day)+'/'+String.valueOf(year);
        Date date1=new SimpleDateFormat("MM/dd/yyyy").parse(sDate1);  
            
         SimpleDateFormat simpleDateformat = new SimpleDateFormat("EEEE");
         returnDay=simpleDateformat.format(date1);
         System.out.println(returnDay.toUpperCase());
        }
        catch(Exception ex)
        {
            System.out.println("error");
        }
        return returnDay.toUpperCase();       
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int month = Integer.parseInt(firstMultipleInput[0]);

        int day = Integer.parseInt(firstMultipleInput[1]);

        int year = Integer.parseInt(firstMultipleInput[2]);

        String res = Result.findDay(month, day, year);

        bufferedWriter.write(res);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
